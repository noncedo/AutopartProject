@model List<DataAccess.DealerGroup>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h3>Dealer Groups</h3>
<br />


<div class=" table-responsive">
    <table class="table table-striped table-hover table-bordered" id="table">

        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Dms Provider</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>

        <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr class=@(Model[i].Code + "_" + i)>
                    <td class=@("code_" + i )>@Model[i].Code</td>
                    <td class=@("name_" + i )>@Model[i].Name</td>
                    <td class=@("dmsProvider_" + i )>
                        <select id="providerSelect" class="dropdown form-control">
                            @foreach (var val in (List<DataAccess.DmsProvider>)ViewData["DmsProviders"])
                            {
                                <option class="dropdown-item" value="@val.DmsProviderId">@val.Name</option>
                            }
                        </select>
                    <td>
                        <input id=@("editBtn_" + i) type="button" value="Edit" onclick="Edit('@Model[i].Code','@Model[i].DealerGroupId','@Model[i].Name', @i, '@Model[i].DmsProviderId')" class="btn btn-info" />
                        @*<input type="button" value="Cancel" onclick="CancelEdit(@i)" class="btn btn-warning"/>*@
                    </td>
                    <td><input type="button" value="Delete" class="btn btn-danger" onclick="Delete(@Model[i].DealerGroupId)" /> </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>

    function Edit(code,dealerGroupId,name, index, dmsProviderId) {

        var btnText = $('#editBtn_' + index).val();

        code = code + '_' + index;

        alert(dealerGroupId);

        if (btnText == 'Edit') {
            $('#editBtn_' + index).val('Save');
            //var oldCodeHtml = $('.' + code + ' td.code_' + index).html();
            $('.' + code + ' td.code_' + index).empty();
            $('.' + code + ' td.code_' + index).html('<input id="txtCode_' + index + '" type="text" value="' + code.replace('_' + index, '') + '" class="form-control" />');

            $('.' + code + ' td.name_' + index).empty();
            $('.' + code + ' td.name_' + index).html('<input id="txtName_' + index + '"  type="text" value="' + name + '" class="form-control" />');
           
        }
        else {
            $('#editBtn_' + index).val('Edit');

            var myObj =
            {
                id: dealerGroupId,
                dmsProviderId: $('#providerSelect').val(),
                name: $('#txtName_' + index).val(),
                code: $('#txtCode_' + index).val(),
                dmsProvider: $('#providerSelect :selected').text(),

            }

            $.post('@Url.Action("UpdateDealerGroup", "DealerGroup")', myObj, function (result) {
                if (result.success == true) {
                alert('Updated!');
                    location.reload();
                }
                else
                    alert("error occured")
            });
        }
    }

    function Delete(dealerId) {
        $.post('@Url.Action("Delete", "Dealer")', { dealerId: dealerId }, function (result) {
            if (result.success == true) {
                alert("Deleted");
                location.reload();
            }
            else
                alert("error occured")
        })
    }


    function Delete(dealerId) {
        $.post('@Url.Action("Delete", "Dealer")', { dealerId: dealerId }, function (result) {
            if (result.success == true) {
                alert("Deleted");
                location.reload();
            }
            else
                alert("error occured")
        })
    }
</script>







@*@(Html.Kendo().Grid<DataAccess.DealerGroup>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.ForeignKey(e => e.DmsProviderId, (IEnumerable<DataAccess.DmsProvider>)ViewData["DmsProviders"], "DmsProviderId", "Name").EditorTemplateName("GridForeignKey").Title("DMS Provider");
                columns.Bound(e => e.Name);
                columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
            })
            .ToolBar(toolbar => toolbar.Create())
            .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("Confirmation").DisplayDeleteConfirmation("Test"))
            .DataSource(dataSource => dataSource
                .Custom()
                .Type("odata-v4")
                .Schema(schema => schema
                .Model(m =>
                {
                    m.Id(t => t.DealerGroupId);
                    m.Field(t => t.DealerGroupId).Editable(false);
                    m.Field(t => t.Name);
                }))
                .Transport(t =>
                    {
                        t.Read(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "read" } });
                        t.Update(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "update" } });
                        t.Create(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "create" } });
                        t.Destroy(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "destroy" } });
                    }
                )
                .PageSize(20)
                .ServerPaging(true)
                .ServerSorting(true)
                .ServerFiltering(true)
                .ServerGrouping(true)
            )
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
            .Sortable()
            .Filterable()
    )

    <script>
            function read() {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/DealerGroups";
            }
            function update(dataItem) {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/DealerGroups(" + dataItem.DealerGroupId + ")";
            }
            function create(dataItem) {
                delete dataItem.ProductID;
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/DealerGroups";
            }
            function destroy(dataItem) {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/DealerGroups(" + dataItem.DealerGroupId + ")";
            }
    </script>*@