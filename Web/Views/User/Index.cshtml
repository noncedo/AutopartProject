@model List<DataAccess.User>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Users</h2>


<div class="row p-2">
    <div class="col-3">
        <input type="button" value="Add" onclick="Add('')" class="btn btn-outline-dark btn-block" />
    </div>
    <div class="offset-9">
    </div>
</div>

<div class=" table-responsive">
    <table class="table table-striped table-hover table-bordered" id="table">
        <thead>
        <tr>
            <th>User Id</th>
            <th>Username</th>
            <th>Domain</th>
            <th></th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @for(int i=0; i < Model.Count; i++)
        {
            <tr class=@(Model[i].UserId + "_" + i)>
                <td class=@("id_" + i ) >@Model[i].UserId</td>
                <td class=@("username_" + i )>@Model[i].Username</td>
                <td class=@("domain_" + i )> @Model[i].Domain</td>
                
                <td>
                    <input id=@("editBtn_" + i) type="button" value="Edit" onclick="Edit('@Model[i].UserId', @i, '@Model[i].Username','@Model[i].Domain')" class="btn btn-info" />
                    <input id=@("cancelBtn_" + i) type="button" value="Cancel" onclick="Cancel(@i,@Model[i].UserId, '@Model[i].Username', '@Model[i].Domain')" class="btn btn-outline-info" hidden />
                </td>
                <td><input type="button" value="Delete" class="btn btn-danger" onclick="Delete(@Model[i].UserId)"/> </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<script>

     function Add(action) {

        if (action == '') {
            $('#table tr:first')
                .after('<tr>' +
                '<td></td>' + 
                    '<td><input id="txtUsername" type="text" placeholder="Username" class="form-control" /></td>' +
                    '<td><input id="txtDomain" type="text" placeholder="Domain" class="form-control" /></td>' +
                '<td><input id="saveNew" type="button" value="Save" class="btn btn-info" onclick="Add(\'Save\')"/</td><td></td></tr >');
        }
        else if (action == 'Save') {
            $('#saveNew').attr('hidden', 'hidden');
            var myObj =
            {
                name: $('#txtUsername').val(),
                domain: $('#txtDomain').val()
            }
            $.post('@Url.Action("Save","User")', myObj, function (result) {
                if (result.success == true) {
                    alert('Saved!');
                    location.reload();
                }
                else
                    alert("error occured")
            });
        }
    }

    function Edit(id,index,username,domain) {

        var userId = id;

        var btnText = $('#editBtn_' + index).val();

        userId = userId + '_' + index;

        if (btnText == 'Edit')
        {
            $('#editBtn_' + index).val('Save');
            $('#cancelBtn_' + index).removeAttr('hidden');

            $('.' + userId + ' td.username_' + index).empty();
            $('.' + userId + ' td.username_' + index).html('<input id="txtUserName_' + index + '"  type="text" value="' + username + '" class="form-control" />');

            $('.' + userId + ' td.domain_' + index).empty();
            $('.' + userId + ' td.domain_' + index).html('<input id="txtDomain_' + index + '"  type="text" value="' + domain + '" class="form-control" />');

        }
        else {
            $('#editBtn_' + index).val('Edit');

            var myObj =
            {
                userId: id,
                username: $('#txtUserName_' + index).val(),
                domain: $('#txtDomain_' + index).val(),
                
            }
            $.post('@Url.Action("UpdateUser", "User")', myObj, function (result) {
                if (result.success == true) {
                    alert('Updated!');
                    location.reload();

                }
                else
                    alert("error occured")
            });
        }
    }

    function Cancel(index,id, name, domain) {
        $('#cancelBtn_' + index).attr('hidden', 'hidden');
        $('#editBtn_' + index).val('Edit');

        id = id + '_' + index;
        $('.' + id + ' td.username_' + index).html(name);
        $('.' + id + ' td.domain_' + index).html(domain);


    }

    function Delete(id) {
        $.post('@Url.Action("Delete", "User")', { userId: id }, function (result) {
            if (result.success == true) {
                alert("Are you sure you wanna delete?");
                location.reload();
            }
            else
                alert("error occured")
        })
    }


</script>



@*@(Html.Kendo().Grid<DataAccess.User>()
                        .Name("grid")
                        .Columns(columns =>
                        {
                            columns.Bound(e => e.Username);
                            columns.Bound(e => e.Domain);


                            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
                        })
                        .ToolBar(toolbar => toolbar.Create())
                        .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("Confirmation").DisplayDeleteConfirmation("Test"))
                        .DataSource(dataSource => dataSource
                            .Custom()
                            .Type("odata-v4")
                            .Schema(schema => schema
                            .Model(m =>
                            {
                                m.Id(t => t.UserId);
                                m.Field(t => t.Username);
                                m.Field(t => t.Domain);

                            }))
                            .Transport(t =>
                            {
                                t.Read(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "read" } });
                                t.Update(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "update" } });
                                t.Create(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "create" } });
                                t.Destroy(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "destroy" } });
                            }
                            )
                            .PageSize(20)
                            .ServerPaging(true)
                            .ServerSorting(true)
                            .ServerFiltering(true)
                        )
                        .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                        .Sortable()
                        .Filterable()

    )

    <script>
            function read() {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/Users";
            }
            function update(dataItem) {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/Users(" + dataItem.UserId + ")";
            }
            function create(dataItem) {
                delete dataItem.ProductID;
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/Users";
            }
        function destroy(dataItem) {
                var baseUrl = "@Url.Content("~")";
                return baseUrl + "odata/Users(" + dataItem.UserId + ")";
            }
    </script>*@